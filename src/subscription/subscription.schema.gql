type Subscription {
  subscription_id: Int!
  user_id: Int
  start_date: DateTime
  end_date: DateTime
  status: String
  Users: User
}

type FilteredSubscriptions {
  active: Subscription
  inactive: [Subscription]
}

input SubscriptionInput {
  subscription_id: Int!
  user_id: Int
  start_date: DateTime
  end_date: DateTime
  status: String
}

type Query {
  subscription(subscription_id: Int!): Subscription
  subscriptionByUserId(user_id: Int!): FilteredSubscriptions
  allSubscriptions: [Subscription]
}

type Mutation {
  createSubscription(input: SubscriptionInput): Subscription
}
